---
name: Build Lambda API (Python Runtime) Prod

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger_build_prod]
  push:
    branches:
      - 'main'
    paths:
      - 'lambda/api/python/**'
      - '.github/workflows/lambda_api_python_build_prod.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - uses: actions/checkout@main
    - name: deploy
      run: |
        cd lambda/api/python
        aws configure --profile deploy_lambda <<-EOF > /dev/null 2>&1
        ${{ secrets.AWS_ACCESS_KEY_ID }}
        ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        us-east-1
        json
        EOF
        AWS_S3_BUCKET="admin.$(aws ssm get-parameter --name '/cabal/control_domain_zone_name' --profile deploy_lambda | jq -r '.Parameter.Value')"
        for FUNC in * ; do
          pushd "${FUNC}"
          pip install -r requirements.txt -t ./python 2>/dev/null || true
          find . -exec touch -d "2004-02-29 16:21:42" \{\} \; -print | sort | zip -X -D ../$FUNC.zip -@
          popd
          openssl dgst -sha256 -binary "$FUNC.zip" | openssl enc -base64 | tr -d "\n" > "$FUNC.zip.base64sha256"
          aws s3 cp "$FUNC.zip.base64sha256" "s3://${AWS_S3_BUCKET}/lambda/$FUNC.zip.base64sha256" --profile deploy_lambda --no-progress --acl private --content-type text/plain
          aws s3 cp "${FUNC}.zip" "s3://${AWS_S3_BUCKET}/lambda/${FUNC}.zip" --profile deploy_lambda --no-progress --acl private
        done
        ls -l >../../../terraform/infra/lambda_python_manifest.txt
    - name: trigger terraform
      run: |
        MYNAME="${{github.event.pusher.name}} (automated)"
        MYEMAIL="${{github.event.pusher.email}}"
        git config --global user.name "${MYNAME}"
        git config --global user.email "${MYEMAIL}"
        git add terraform/infra/lambda_python_manifest.txt || true
        git commit -m "Trigger Terraform following lambda build" || true
        git push || true