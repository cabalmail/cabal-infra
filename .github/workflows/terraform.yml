---
name: Build and Deploy Terraform Infrastructure

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger_build_dev]
  push:
    branches:
      - '0.3.0'
      - main
      - stage
    paths:
      - 'terraform/infra'
      - 'terraform/infra/*'
      - 'terraform/infra/*/**'
      - '.github/workflows/terraform.yml'

jobs:
  tflint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/infra
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: install-linters
      run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
    - name: initialize-linter
      run: tflint --version && tflint --init
    - name: run-linter
      run: for i in ./ modules/* modules/*/modules/* ; do tflint ; done
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/infra
    environment: ${{ github.ref_name == 'refs/heads/main' && 'prod' || ( github.ref_name == 'refs/heads/stage' && 'stage' || 'development' ) }}
    needs:
    - tflint
    env:
      TF_API_TOKEN: ${{ secrets.TF_TOKEN }}
      TF_VARS_smtpout_scale: TF_VARS_SMTPOUT_SCALE
      TF_VARS_availability_zones: TF_VAR_AVAILABILITY_ZONES
      TF_VARS_region: TF_VAR_AWS_REGION
      TF_VARS_cidr_block: TF_VAR_CIDR_BLOCK
      TF_VARS_control_domain: TF_VAR_CONTROL_DOMAIN
      TF_VARS_email: TF_VAR_EMAIL
      TF_VARS_environment: TF_VAR_ENVIRONMENT
      TF_VARS_imap_scale: TF_VAR_IMAP_SCALE
      TF_VARS_mail_domains: TF_VAR_MAIL_DOMAINS
      TF_VARS_smtpin_scale: TF_VAR_SMTPIN_SCALE
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install-terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
    - name: init-terraform
      run: terraform init
    - name: plan-terraform
      run: terraform plan -no-color
    - name: plan-stdout
      run: echo ${{ steps.plan-terraform.outputs.stdout }}
    - name: plan-stderr
      run: echo ${{ steps.plan-terraform.outputs.stderr }}
    - name: plan-exitcode
      run: echo ${{ steps.plan-terraform.outputs.exitcode }}